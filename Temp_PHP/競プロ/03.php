<?php


// =============================================== 01
/*

入力例1
3 3 2
###
###
...
2 2
1 1

出力例1
.
#

入力例2
2 2 1
#.
.#
0 1

出力例2
.

*/


// 値取得
fscanf(STDIN, "%d %d %d", $a, $b, $c);

for ($i = 0; $i < $a; $i++) {

    // １行のデータを取得
    $arr_01 = fgets(STDIN);
    // １行のデータを分解して、２次元配列へ格納
    $arr_01_v[] = str_split(trim($arr_01));
}

// ===　解答用 ２次元配列の値出力
for ($i = 0; $i < $c; $i++) {

    // 値取得 
    fscanf(STDIN, "%d %d", $aa, $bb);
    print($arr_01_v[$aa][$bb] . "\n");
}


// ============================================== 02

/*

座標の文字を "#" に書き換えた後の盤面を出力

入力例1
3 3 1
...
...
...
0 0

出力例1
#..
...
...

入力例2
4 4 2
####
####
....
##..
2 0
2 2

出力例2
####
####
#.#.
##..


*/

// === 値取得 
fscanf(STDIN, "%d %d %d", $a_02, $b_02, $c_02);

// === 値取得
for ($i = 0; $i < $a_02; $i++) {
    $arr_02_tmp = trim(fgets(STDIN));
    $arr_02_v[] = str_split(trim($arr_02_tmp));
}

// === 対象 index を # へ変更
for ($i = 0; $i < $c_02; $i++) {
    fscanf(STDIN, "%d %d", $aa_02, $bb_02);
    $arr_02_v[$aa_02][$bb_02] = "#";
}

// === ２次元配列　解答　出力
for ($i = 0; $i < $a_02; $i++) {
    for ($j = 0; $j < $b_02; $j++) {
        print($arr_02_v[$i][$j]);
    }
    print("\n");
}

// ============================================== 03

/*

盤面が与えられるので、「左右のマスが "#" 」であるようなマスの座標を全て出力してください。
ただし、左端のマスの場合は「右のマスが "#" 」であれば、右端のマスの場合は「左のマスが "#" 」であれば条件を満たすものとします。

入力例1
3 3
#.#
.#.
...

出力例1
0 1
1 0
1 2

入力例2
4 4
####
####
####
####

出力例2
0 0
0 1
0 2
0 3
1 0
1 1
1 2
1 3
2 0
2 1
2 2
2 3
3 0
3 1
3 2
3 3


*/


fscanf(STDIN, "%d %d", $a_03, $b_03);

for ($i = 0; $i < $a_03; $i++) {
    $arr_03_tmp = trim(fgets(STDIN));
    $arr_03_v[] = str_split(trim($arr_03_tmp));
}

for ($i = 0; $i < $a_03; $i++) {

    for ($j = 0; $j < $b_03; $j++) {

        // === 両脇　チェック
        if ($arr_03_v[$i][$j + 1] == "#" && $arr_03_v[$i][$j - 1] == "#") {
            print($i . " " . $j . "\n");
        }

        // === 一番左の場合の チェック
        if ($j == 0 && $arr_03_v[$i][$j + 1] == "#") {
            print($i . " " . $j . "\n");
        }

        // === 一番右の場合のチェック
        if ($j == $b_03 - 1 && $arr_03_v[$i][$j - 1] == "#") {
            print($i . " " . $j . "\n");
        }
    }
}

// ============================================== 04

/*

入力例1
3 3
###
...
###

出力例1
1 0
1 1
1 2

入力例2
4 4
#.#.
.#.#
.#.#
#.#.

出力例2
0 1
0 3
3 1
3 3

 */

fscanf(STDIN, "%d %d", $a_04, $b_04);
