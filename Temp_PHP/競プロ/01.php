<?php

// ============================================================ 01
/*

3の倍数のカウント

入力例1
2
4 3

出力例1
1

入力例2
3
1 6 9
*/

$num = trim(fgets(STDIN));
$str = trim(fgets(STDIN));

function C_01($str_val)
{
    $arr = explode(" ", $str_val);
    $ans = 0;

    foreach ($arr as $val) {
        if ($val % 3 == 0) {
            $ans = $ans + 1;
        }
    }
    print $ans;
}

// === 実行
C_01($str);

// ============================================================ 02

/*
入力例1
2
7
1

出力例1
YES

入力例2
3
4
11
35

出力例2
NO

正整数 n と n 個の整数 a_1, ..., a_n が改行区切りで与えられるので、各 a_i (1 ≤ i ≤ n) が 7 であるか判定し、 a_1, ..., a_n 
の中に 7 がひとつでも含まれていた場合には "YES" を、
そうでない場合（7 がひとつも含まれていなかった場合）には "NO" を出力してください。

 **/

// === 7 が値で入ってきているかチェック
$num_02 = trim(fgets(STDIN));
$flg_02 = false;
for ($i = 0; $i < $num_02; $i++) {
    $str_02 = trim(fgets(STDIN));

    if (strcmp($str_02, "7") == 0) {
        $flg_02 = true;
        break;
    }
}

// === 判定
if ($flg_02) {
    print("YES");
} else {
    print("NO");
}

// ============================================================ 03

/*

1 から n まで番号が付けられた人々がいます。 i 番目の人の財産は a_i 円です。
金額 k が与えられるので（k は a_1, ..., a_n のいずれか）、財産が k 円である人の番号を出力してください。
ただし、そのような人が複数いる場合には、そうした人々の中で最も小さい番号を出力してください。

入力例1
2
5
6
6

出力例1
2

入力例2
4
9
8
2
2
2

出力例2
3

*/

$num_03 = trim(fgets(STDIN));

$arr_03 = array();
for ($i = 0; $i < $num_03; $i++) {
    $arr_03[$i] = trim(fgets(STDIN));
}

// === 判定用　値
$Han_num_03 = trim(fgets(STDIN));

// === 答えと何回一致したか
$count_03 = 0;
$ans_03 = 0;
for ($i = 0; $i < $num_03; $i++) {
    if (strcmp($arr_03[$i], $Han_num_03) == 0) {
        $ans_03 = $i + 1;
        break;
    }
}

// === 答え
print($ans_03);

/*

============= 模範解答　=================

$n = trim(fgets(STDIN));

$a = [];

for ($i = 0; $i < $n; $i++) {

    // =========== TOSSY
    $a[] = trim(fgets(STDIN));
}

$k = trim(fgets(STDIN));

for ($i = 0; $i < $n; $i++) {
    if ($a[$i] === $k) {
        echo $i + 1 . "\n";
        break;
    }
}

 */

// ============================================================ 04

/*

c_1 が S_1 に出現するかどうか、 c_1 が S_2 に出現するかどうか、 ... 、 
c_1 が S_n に出現するかどうか、 c_2 が S_1 に出現するかどうか、 c_2 が S_2 に出現するかどうか、 ... 、 
c_2 が S_n に出現するかどうか、 ... 、 
c_m が S_1 に出現するかどうか、 c_m が S_2 に出現するかどうか、 ... 、 
c_m が S_n に出現するかどうか、という順番で m * n 回出力してください。
末尾に改行を入れ、余計な文字、空行を含んではいけません。

入力例1
1
a
2
paiza
kyoko

出力例1
YES
NO

入力例2
2
c
d
2
cat
dog

出力例2
YES
NO
NO
YES
*/

$num_04 = trim(fgets(STDIN));

// === １回目の要素の取得
$arr_04_01 = [];
for ($i = 0; $i < $num_04; $i++) {
    $arr_04_01[] = trim(fgets(STDIN));
}

// === 2回目の要素の取得
$num_04_02 = trim(fgets(STDIN));
$arr_04_02 = [];
for ($i = 0; $i < $num_04_02; $i++) {
    // === cat , dog などを取得
    $arr_04_02[] = trim(fgets(STDIN));
}

// strpos() 文字列が含まれているかどうかの判定
// ========= 文字が含まれているかの判定処理 =========
for ($i = 0; $i < $num_04; $i++) {

    for ($j = 0; $j < $num_04_02; $j++) {
        if (strpos($arr_04_02[$j], $arr_04_01[$i]) !== false) {
            print("YES" . "\n");
        } else {
            print("NO" . "\n");
        }
    }
}

// ============================================================ final

/*

入力例1
3 2 1
2 2
1 2
1 1

出力例1
0
1
2

入力例2
4 5 2
1 3 4 4 5
2 2 2 2 2
1 2 3 4 5
1 1 1 1 1

出力例2
0
5
1
0

パイザ君の所属する会社では忘年会の余興で次のようなゲームを行います。
まず、正整数 M が発表され、参加者は手元の紙に M 個、好きな数字を書きます。
このとき、紙に書く数のそれぞれは 1 以上 M 以下であり、同じ数字を何度書いても構いません。
その後、 1 以上 M 以下の数 K が発表され、各参加者は自分の紙に数字 K を書いた数だけポイントをもらい、
ポイントの高い順に景品が配られます。

忘年会の参加者の人数 N と、数 M , K が与えられ、
各参加者が書いた紙が与えられるので、それぞれの参加者の得点を計算して出力してください。


＝＝＝　模範解答 ＝＝＝

$nmk = trim(fgets(STDIN));
[$n, $m, $k] = explode(' ', $nmk);

for ($i = 0; $i < $n; $i++) {
    $a = explode(' ', trim(fgets(STDIN)));
    $ans = 0;

    for ($j = 0; $j < $m; $j++) {
        if ($a[$j] === $k) {
            $ans++;
        }
    }

    echo $ans . "\n";
}

*/

fscanf(STDIN, "%d %d %d", $num05_01, $num05_02, $num05_03);

for ($i = 0; $i < $num05_01; $i++) {

    // === １行を配列へ格納
    $a_05 = explode(' ', trim(fgets(STDIN)));

    // === 判定結果 出力用
    $ans_05 = 0;

    // === ダブりチェック    
    for ($j = 0; $j < $num05_02; $j++) {
        if ($a_05[$j] == $num05_03) {
            $ans_05 += 1;
        }
    }

    // === 判定結果　出力
    print($ans_05 . "\n");
}
